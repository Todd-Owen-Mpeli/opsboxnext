import Head from "next/head";
import {gql} from "@apollo/client";
import {client} from "../lib/apollo";
import {getNavbarContent} from "../lib/navbarContent";
import {getReadBlogsContent} from "../lib/readBlogsContent";
import {getFooterContent} from "../lib/footerContent";

// Components
import Hero from "../components/Hero";
import Navbar from "../components/Navbar";
import Footer from "../components/Footer";
import ReadBlogs from "../components/ReadBlogs";
import TextImageQuote from "../components/TextImageQuote";
import TitleAndParagraph from "../components/TitleAndParagraph";
import ContactForm from "../components/ContactForm";

const contact = ({
	navbarContent,
	contactPageContent,
	contactForm,
	readBlogsContent,
	footerContent,
}) => {
	return (
		<>
			<Head>
				<title>{navbarContent?.pageTitle}</title>
				<meta name="description" content="Generated by create next app" />
				<link rel="icon" href="/svg/favicon.svg" />
			</Head>

			{/* <!--===== NAVBAR =====--> */}
			<Navbar
				navbarContent={navbarContent?.navbarContent}
				menuLinks={navbarContent?.navbarMenu}
			/>

			<main>
				{/* HERO */}
				<Hero
					title={contactPageContent?.heroSection?.title}
					backgroundImage={
						contactPageContent?.heroSection?.heroImage?.sourceUrl
					}
				/>

				{/* TITLE AND PARAGRAPH */}
				<TitleAndParagraph
					title={contactPageContent?.titleParagraphs?.title}
					paragraph={contactPageContent?.titleParagraphs?.paragraph}
				/>

				{/* TEXT IMAGE QUOTE */}
				<TextImageQuote
					title={contactPageContent?.textQuoteImage?.title}
					quoteText={contactPageContent?.textQuoteImage?.quoteText}
					personName={contactPageContent?.textQuoteImage?.personName}
					image={contactPageContent?.textQuoteImage?.image?.sourceUrl}
					buttonLink={contactPageContent?.textQuoteImage?.buttonLink}
					paragraphOne={contactPageContent?.textQuoteImage?.paragraphOne}
					paragraphTwo={contactPageContent?.textQuoteImage?.paragraphTwo}
					positioningOptions={
						contactPageContent?.textQuoteImage
							?.backgroundAestheticsLocationPositioningOptions
					}
					// Display Options
					displayThreeSquaresOption={
						contactPageContent?.textQuoteImage?.displayThreeSquaresOption
					}
					selectBackgroundAestheticsOptions={
						contactPageContent?.textQuoteImage
							?.selectBackgroundAestheticsOptions
					}
					displayQuoteOption={
						contactPageContent?.textQuoteImage?.displayQuoteOption
					}
					displayImageOption={
						contactPageContent?.textQuoteImage?.displayImageOption
					}
					displayBoldParagraphOption={
						contactPageContent?.textQuoteImage?.displayBoldParagraphOption
					}
					displayButtonOption={
						contactPageContent?.textQuoteImage?.displayButtonOption
					}
					displayBackgroundAestheticsOptions={
						contactPageContent?.textQuoteImage
							?.displayBackgroundAestheticsOptions
					}
				/>

				{/* CONTACT FORM */}
				<ContactForm title={contactForm?.title} contactForm={contactForm} />

				{/* READ BLOGS */}
				<ReadBlogs
					title={contactPageContent?.readOurBlogs?.title}
					readBlogsContent={readBlogsContent?.readBlogsContent}
				/>
			</main>

			{/* <!--===== FOOTER =====--> */}
			<Footer
				footerContent={footerContent?.footerContent}
				menuLinks={footerContent?.footerMenu}
			/>
		</>
	);
};

export default contact;

export async function getStaticProps() {
	const getContactPageContent = gql`
		{
			mainContent: pages(where: {status: PUBLISH, id: 335}) {
				edges {
					node {
						contactPage {
							titleParagraphs {
								title
								paragraph
							}
							textQuoteImage {
								title
								selectBackgroundAestheticsOptions
								quoteText
								personName
								paragraphTwo
								paragraphOne
								image {
									sourceUrl
								}
								displayThreeSquaresOption
								displayQuoteOption
								displayImageOption
								displayButtonOption
								displayBoldParagraphOption
								displayBackgroundAestheticsOptions
								buttonLink {
									url
									title
									target
								}
								backgroundAestheticsLocationPositioningOptions {
									top
									right
									left
									bottom
								}
							}
							readOurBlogsTitle
							heroSection {
								title
								heroImage {
									sourceUrl
								}
							}
						}
					}
				}
			}
			gfForms(where: {formIds: "2"}) {
				nodes {
					formId
					title
					submitButton {
						text
					}
					formFields(first: 10) {
						nodes {
							... on NameField {
								id
								label
								type
							}
							... on TextField {
								id
								type
								label
							}
							... on EmailField {
								id
								type
								label
							}
							... on CaptchaField {
								id
								label
								type
							}
							... on PhoneField {
								id
								label
								type
							}
							... on TextAreaField {
								id
								type
								label
							}
						}
					}
				}
			}
		}
	`;

	const response = await client.query({
		query: getContactPageContent,
	});

	const navbarContent = await getNavbarContent();
	const footerContent = await getFooterContent();
	const readBlogsContent = await getReadBlogsContent();

	return {
		props: {
			navbarContent,
			contactPageContent:
				response?.data?.mainContent?.edges[0]?.node?.contactPage,
			contactForm: response?.data?.gfForms?.nodes[0],
			readBlogsContent,
			footerContent,
		},
		revalidate: 1,
	};
}
