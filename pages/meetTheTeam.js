import Head from "next/head";
import {gql} from "@apollo/client";
import {client} from "../lib/apollo";
import {getNavbarContent} from "../lib/navbarContent";
import {getReadBlogsContent} from "../lib/readBlogsContent";
import {getFooterContent} from "../lib/footerContent";

// Components
import Hero from "../components/Hero";
import Navbar from "../components/Navbar";
import Footer from "../components/Footer";
import ReadBlogs from "../components/ReadBlogs";
import TeamMember from "../components/TeamMember";
import TitleTwoParagraphButton from "../components/TitleTwoParagraphButton.js";

const meetTheTeam = ({
	navbarContent,
	meetTheTeamContent,
	readBlogsContent,
	footerContent,
}) => {
	return (
		<>
			<Head>
				<title>{navbarContent?.pageTitle}</title>
				<meta name="description" content="Generated by create next app" />
				<link rel="icon" href="/svg/favicon.svg" />
			</Head>

			{/* <!--===== NAVBAR =====--> */}
			<Navbar
				navbarContent={navbarContent?.navbarContent}
				menuLinks={navbarContent?.navbarMenu}
			/>

			<main>
				{/* HERO */}
				<Hero
					title={meetTheTeamContent?.heroSection?.title}
					backgroundImage={
						meetTheTeamContent?.heroSection?.heroImage?.sourceUrl
					}
				/>

				{/* TITLE AND PARAGRAPH */}
				<TitleTwoParagraphButton
					// Content
					title={meetTheTeamContent?.titleTwoParagraphsButton?.title}
					boldParagraph={
						meetTheTeamContent?.titleTwoParagraphsButton?.boldParagraph
					}
					paragraphOne={
						meetTheTeamContent?.titleTwoParagraphsButton?.paragraphOne
					}
					paragraphTwo={
						meetTheTeamContent?.titleTwoParagraphsButton?.paragraphTwo
					}
					buttonLink={meetTheTeamContent?.titleTwoParagraphsButton?.buttonLink}
					// Display Options
					displayThreeSquaresOption={
						meetTheTeamContent?.titleTwoParagraphsButton
							?.displayThreeSquaresOption
					}
					displayButtonOption={
						meetTheTeamContent?.titleTwoParagraphsButton?.displayButtonOption
					}
					displayBoldText={
						meetTheTeamContent?.titleTwoParagraphsButton?.displayBoldText
					}
				/>

				{/* TEAM MEMBER */}
				<TeamMember
					buttonLink={meetTheTeamContent?.teamMembers?.buttonLink}
					teamMembersContent={meetTheTeamContent?.teamMembers?.teamMember}
				/>

				{/* TITLE AND PARAGRAPH */}
				<TitleTwoParagraphButton
					// Content
					title={meetTheTeamContent?.titleTwoParagraphs?.title}
					boldParagraph={meetTheTeamContent?.titleTwoParagraphs?.boldParagraph}
					paragraphOne={meetTheTeamContent?.titleTwoParagraphs?.paragraphOne}
					paragraphTwo={meetTheTeamContent?.titleTwoParagraphs?.paragraphTwo}
					buttonLink={meetTheTeamContent?.titleTwoParagraphs?.buttonLink}
					// Display Options
					displayThreeSquaresOption={
						meetTheTeamContent?.titleTwoParagraphs?.displayThreeSquaresOption
					}
					displayButtonOption={
						meetTheTeamContent?.titleTwoParagraphs?.displayButtonOption
					}
					displayBoldText={
						meetTheTeamContent?.titleTwoParagraphs?.displayBoldText
					}
				/>

				{/* READ BLOGS */}
				<ReadBlogs
					title={meetTheTeamContent?.readOurBlogs?.title}
					readBlogsContent={readBlogsContent?.readBlogsContent}
				/>
			</main>

			{/* <!--===== FOOTER =====--> */}
			<Footer
				footerContent={footerContent?.footerContent}
				menuLinks={footerContent?.footerMenu}
			/>
		</>
	);
};

export default meetTheTeam;

export async function getStaticProps() {
	const getMeetTheTeamContent = gql`
		{
			mainContent: pages(where: {id: 799}) {
				edges {
					node {
						meetTheTeamPage {
							heroSection {
								title
								heroImage {
									sourceUrl
								}
							}
							readOurBlogs {
								title
							}
							titleTwoParagraphsButton {
								title
								paragraphOne
								paragraphTwo
								boldParagraph
								buttonLink {
									url
									title
									target
								}
								displayThreeSquaresOption
								displayButtonOption
								displayBoldText
							}
							titleTwoParagraphs {
								title
								paragraphTwo
								paragraphOne
								displayThreeSquaresOption
								displayButtonOption
								displayBoldText
								boldParagraph
								buttonLink {
									url
									title
									target
								}
							}
							teamMembers {
								buttonLink {
									url
									title
									target
								}
								teamMember {
									information {
										name
										jobPosition
										emailAddress
										description
										profileImage {
											sourceUrl
										}
									}
								}
							}
						}
					}
				}
			}
		}
	`;

	const response = await client.query({
		query: getMeetTheTeamContent,
	});

	const navbarContent = await getNavbarContent();
	const footerContent = await getFooterContent();
	const readBlogsContent = await getReadBlogsContent();

	return {
		props: {
			navbarContent,
			meetTheTeamContent:
				response?.data?.mainContent?.edges[0]?.node?.meetTheTeamPage,
			readBlogsContent,
			footerContent,
		},
		revalidate: 1,
	};
}
