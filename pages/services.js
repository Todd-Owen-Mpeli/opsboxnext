import Head from "next/head";
import {gql} from "@apollo/client";
import {client} from "../lib/apollo";
import {getNavbarContent} from "../lib/navbarContent";
import {getReadBlogsContent} from "../lib/readBlogsContent";
import {getFooterContent} from "../lib/footerContent";

// Components
import Hero from "../components/Hero";
import Navbar from "../components/Navbar";
import Footer from "../components/Footer";
import TextImage from "../components/TextImage";
import ReadBlogs from "../components/ReadBlogs";
import ContentSquares from "../components/ContentSquares";
import TitleTwoParagraphButton from "../components/TitleTwoParagraphButton.js";

const services = ({
	navbarContent,
	servicesPageContent,
	readBlogsContent,
	footerContent,
}) => {
	return (
		<>
			<Head>
				<title>{navbarContent?.pageTitle}</title>
				<meta name="description" content="Generated by create next app" />
				<link rel="icon" href="/svg/favicon.svg" />
			</Head>

			{/* <!--===== NAVBAR =====--> */}
			<Navbar
				navbarContent={navbarContent?.navbarContent}
				menuLinks={navbarContent?.navbarMenu}
			/>

			<main>
				{/* HERO */}
				<Hero
					title={servicesPageContent?.heroSection?.title}
					backgroundImage={
						servicesPageContent?.heroSection?.heroImage?.sourceUrl
					}
				/>

				{/* TITLE AND PARAGRAPH */}
				<TitleTwoParagraphButton
					// Content
					title={servicesPageContent?.titleTwoParagraphsButton?.title}
					boldParagraph={
						servicesPageContent?.titleTwoParagraphsButton?.boldParagraph
					}
					paragraphOne={
						servicesPageContent?.titleTwoParagraphsButton?.paragraphOne
					}
					paragraphTwo={
						servicesPageContent?.titleTwoParagraphsButton?.paragraphTwo
					}
					buttonLink={servicesPageContent?.titleTwoParagraphsButton?.buttonLink}
					// Display Options
					displayThreeSquaresOption={
						servicesPageContent?.titleTwoParagraphsButton
							?.displayThreeSquaresOption
					}
					displayEmailLinkOption={
						servicesPageContent?.titleTwoParagraphsButton
							?.displayEmailLinkOption
					}
					displayButtonOption={
						servicesPageContent?.titleTwoParagraphsButton?.displayButtonOption
					}
					displayBoldText={
						servicesPageContent?.titleTwoParagraphsButton?.displayBoldText
					}
				/>

				{/* CONTENT SQUARES */}
				<ContentSquares
					// Content
					title={servicesPageContent?.contentSquares?.title}
					columnOne={servicesPageContent?.contentSquares?.column}
					columnTwo={servicesPageContent?.contentSquares?.columnTwo}
					columnThree={servicesPageContent?.contentSquares?.columnThree}
					columnFour={servicesPageContent?.contentSquares?.columnFour}
					// Display Options
					displayTitle={servicesPageContent?.contentSquares?.displayTitle}
					displayNumberOfColumns={
						servicesPageContent?.contentSquares?.displayNumberOfColumns
					}
					// Display Squares (Blue/Grey)
					displayBlueGreySquares={
						servicesPageContent?.contentSquares?.displayBlueGreySquares
					}
					// Display Background Squares Aesthetics
					displayBackgroundAesthetics={
						servicesPageContent?.contentSquares?.displayBackgroundAesthetics
					}
				/>

				<TextImage
					title={servicesPageContent?.textImage?.title}
					subtitle={servicesPageContent?.textImage?.subtitle}
					paragraphOne={servicesPageContent?.textImage?.paragraphOne}
					paragraphTwo={servicesPageContent?.textImage?.paragraphTwo}
					buttonLink={servicesPageContent?.titleTwoParagraphsButton?.buttonLink}
					image={servicesPageContent?.textImage?.image?.sourceUrl}
					// Display Options
					displayButton={servicesPageContent?.textImage?.displayButton}
					// Display Squares (Blue/Grey)
					displayBlueGreySquares={
						servicesPageContent?.textImage?.displayBlueGreySquares
					}
				/>

				{/* READ BLOGS */}
				<ReadBlogs
					title={servicesPageContent?.readOurBlogs?.title}
					readBlogsContent={readBlogsContent?.readBlogsContent}
				/>
			</main>

			{/* <!--===== FOOTER =====--> */}
			<Footer
				footerContent={footerContent?.footerContent}
				menuLinks={footerContent?.footerMenu}
			/>
		</>
	);
};

export default services;

export async function getStaticProps() {
	const getServicesPageContent = gql`
		{
			mainContent: pages(where: {status: PUBLISH, id: 327}) {
				edges {
					node {
						ServicesPage {
							readOurBlogsTitle
							titleTwoParagraphsButton {
								title
								paragraphTwo
								paragraphOne
								displayThreeSquaresOption
								displayEmailLinkOption
								displayButtonOption
								displayBoldText
								boldParagraph
								buttonLink {
									target
									title
									url
								}
							}
							textImage {
								title
								subtitle
								paragraphTwo
								paragraphOne
								displayButton
								displayBlueGreySquares
								image {
									sourceUrl
								}
								buttonLink {
									url
									title
									target
								}
							}
							heroSection {
								title
								heroImage {
									sourceUrl
								}
							}
							contentSquares {
								title
								displayTitle
								displayNumberOfColumns
								displayBlueGreySquares
								displayBackgroundAesthetics
								columnTwo {
									title
									paragraph
									buttonLink {
										url
										title
										target
									}
									backgroundImage {
										sourceUrl
									}
								}
								columnThree {
									title
									paragraph
									buttonLink {
										url
										title
										target
									}
									backgroundImage {
										sourceUrl
									}
								}
								columnFour {
									title
									paragraph
									buttonLink {
										url
										title
										target
									}
									backgroundImage {
										sourceUrl
									}
								}
								column {
									title
									paragraph
									buttonLink {
										url
										title
										target
									}
									backgroundImage {
										sourceUrl
									}
								}
							}
						}
					}
				}
			}
		}
	`;

	const response = await client.query({
		query: getServicesPageContent,
	});

	const navbarContent = await getNavbarContent();
	const footerContent = await getFooterContent();
	const readBlogsContent = await getReadBlogsContent();

	return {
		props: {
			navbarContent,
			servicesPageContent:
				response?.data?.mainContent?.edges[0]?.node?.ServicesPage,
			readBlogsContent,
			footerContent,
		},
		revalidate: 1,
	};
}
