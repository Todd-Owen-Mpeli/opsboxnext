import Head from "next/head";
import {gql} from "@apollo/client";
import {client} from "../lib/apollo";
import {getNavbarContent} from "../lib/navbarContent";
import {getReadBlogsContent} from "../lib/readBlogsContent";
import {getFooterContent} from "../lib/footerContent";

// Components
import Hero from "../components/Hero";
import Navbar from "../components/Navbar";
import Footer from "../components/Footer";
import ReadBlogs from "../components/ReadBlogs";
import TextImageQuote from "../components/TextImageQuote";
import RedIconBulletPointsTwo from "../components/RedIconBulletPointsTwo";
import TitleTwoParagraphButton from "../components/TitleTwoParagraphButton.js";

const commercialLending = ({
	navbarContent,
	commercialLendingContent,
	readBlogsContent,
	footerContent,
}) => {
	return (
		<>
			<Head>
				<title>{navbarContent?.pageTitle}</title>
				<meta name="description" content="Generated by create next app" />
				<link rel="icon" href="/svg/favicon.svg" />
			</Head>

			{/* <!--===== NAVBAR =====--> */}
			<Navbar
				navbarContent={navbarContent?.navbarContent}
				menuLinks={navbarContent?.navbarMenu}
			/>

			<main>
				{/* HERO */}
				<Hero
					title={commercialLendingContent?.heroSection?.title}
					backgroundImage={
						commercialLendingContent?.heroSection?.heroImage?.sourceUrl
					}
				/>
				{/* TITLE AND PARAGRAPH */}
				<TitleTwoParagraphButton
					// Content
					title={commercialLendingContent?.titleTwoParagraphsButton?.title}
					boldParagraph={
						commercialLendingContent?.titleTwoParagraphsButton?.boldParagraph
					}
					paragraphOne={
						commercialLendingContent?.titleTwoParagraphsButton?.paragraphOne
					}
					paragraphTwo={
						commercialLendingContent?.titleTwoParagraphsButton?.paragraphTwo
					}
					buttonLink={
						commercialLendingContent?.titleTwoParagraphsButton?.buttonLink
					}
					// Display Options
					displayThreeSquaresOption={
						commercialLendingContent?.titleTwoParagraphsButton
							?.displayThreeSquaresOption
					}
					displayEmailLinkOption={
						commercialLendingContent?.titleTwoParagraphsButton
							?.displayEmailLinkOption
					}
					displayButtonOption={
						commercialLendingContent?.titleTwoParagraphsButton
							?.displayButtonOption
					}
					displayBoldText={
						commercialLendingContent?.titleTwoParagraphsButton?.displayBoldText
					}
				/>

				{/* TEXT IMAGE QUOTE */}
				<TextImageQuote
					title={commercialLendingContent?.textImage?.title}
					quoteText={commercialLendingContent?.textImage?.quoteText}
					personName={commercialLendingContent?.textImage?.personName}
					image={commercialLendingContent?.textImage?.image?.sourceUrl}
					buttonLink={commercialLendingContent?.textImage?.buttonLink}
					paragraphOne={commercialLendingContent?.textImage?.paragraphOne}
					paragraphTwo={commercialLendingContent?.textImage?.paragraphTwo}
					positioningOptions={
						commercialLendingContent?.textImage
							?.backgroundAestheticsLocationPositioningOptions
					}
					// Display Options
					displayThreeSquaresOption={
						commercialLendingContent?.textImage?.displayThreeSquaresOption
					}
					selectBackgroundAestheticsOptions={
						commercialLendingContent?.textImage
							?.selectBackgroundAestheticsOptions
					}
					displayQuoteOption={
						commercialLendingContent?.textImage?.displayQuoteOption
					}
					displayImageOption={
						commercialLendingContent?.textImage?.displayImageOption
					}
					displayBoldParagraphOption={
						commercialLendingContent?.textImage?.displayBoldParagraphOption
					}
					displayButtonOption={
						commercialLendingContent?.textImage?.displayButtonOption
					}
					displayBackgroundAestheticsOptions={
						commercialLendingContent?.textImage
							?.displayBackgroundAestheticsOptions
					}
				/>

				{/* TEXT IMAGE QUOTE TWO */}
				<TextImageQuote
					title={commercialLendingContent?.textImageTwo?.title}
					quoteText={commercialLendingContent?.textImageTwo?.quoteText}
					personName={commercialLendingContent?.textImageTwo?.personName}
					image={commercialLendingContent?.textImageTwo?.image?.sourceUrl}
					buttonLink={commercialLendingContent?.textImageTwo?.buttonLink}
					paragraphOne={commercialLendingContent?.textImageTwo?.paragraphOne}
					paragraphTwo={commercialLendingContent?.textImageTwo?.paragraphTwo}
					positioningOptions={
						commercialLendingContent?.textImageTwo
							?.backgroundAestheticsLocationPositioningOptions
					}
					// Display Options
					displayThreeSquaresOption={
						commercialLendingContent?.textImageTwo?.displayThreeSquaresOption
					}
					selectBackgroundAestheticsOptions={
						commercialLendingContent?.textImageTwo
							?.selectBackgroundAestheticsOptions
					}
					displayQuoteOption={
						commercialLendingContent?.textImageTwo?.displayQuoteOption
					}
					displayImageOption={
						commercialLendingContent?.textImageTwo?.displayImageOption
					}
					displayBoldParagraphOption={
						commercialLendingContent?.textImageTwo?.displayBoldParagraphOption
					}
					displayButtonOption={
						commercialLendingContent?.textImageTwo?.displayButtonOption
					}
					displayBackgroundAestheticsOptions={
						commercialLendingContent?.textImageTwo
							?.displayBackgroundAestheticsOptions
					}
				/>

				{/* RED ICON BULLET POINTS TWO */}
				<RedIconBulletPointsTwo
					title={commercialLendingContent?.redIconsBulletPoints?.title}
					paragraph={commercialLendingContent?.redIconsBulletPoints?.paragraph}
					columnOne={commercialLendingContent?.redIconsBulletPoints?.columnOne}
					columnTwo={commercialLendingContent?.redIconsBulletPoints?.columnTwo}
				/>

				{/* READ BLOGS */}
				<ReadBlogs
					title={commercialLendingContent?.readOurBlogs?.title}
					readBlogsContent={readBlogsContent?.readBlogsContent}
				/>
			</main>

			{/* <!--===== FOOTER =====--> */}
			<Footer
				footerContent={footerContent?.footerContent}
				menuLinks={footerContent?.footerMenu}
			/>
		</>
	);
};

export default commercialLending;

export async function getStaticProps() {
	const getCommercialLendingContent = gql`
		{
			mainContent: pages(where: {id: 329}) {
				edges {
					node {
						CommercialLendingPage {
							heroSection {
								title
								heroImage {
									sourceUrl
								}
							}
							readOurBlogs {
								title
							}
							titleTwoParagraphsButton {
								title
								paragraphOne
								paragraphTwo
								boldParagraph
								buttonLink {
									url
									title
									target
								}
								displayThreeSquaresOption
								displayEmailLinkOption
								displayButtonOption
								displayBoldText
							}
							textImage {
								title
								selectBackgroundAestheticsOptions
								paragraphTwo
								paragraphOne
								displayThreeSquaresOption
								image {
									sourceUrl
								}
								displayImageOption
								displayButtonOption
								displayBackgroundAestheticsOptions
								backgroundAestheticsLocationPositioningOptions {
									top
									right
									left
									bottom
								}
								buttonLink {
									url
									title
									target
								}
								displayBoldParagraphOption
								displayQuoteOption
							}
							textImageTwo {
								title
								quoteText
								personName
								paragraphTwo
								paragraphOne
								displayThreeSquaresOption
								image {
									sourceUrl
								}
								displayImageOption
								displayButtonOption
								displayQuoteOption
								displayBoldParagraphOption
								selectBackgroundAestheticsOptions
								displayBackgroundAestheticsOptions
								backgroundAestheticsLocationPositioningOptions {
									top
									right
									left
									bottom
								}
								buttonLink {
									url
									title
									target
								}
							}
							redIconsBulletPoints {
								title
								paragraph
								columnOne {
									bulletPoint {
										title
										paragraph
									}
								}
								columnTwo {
									bulletPoint {
										title
										paragraph
									}
								}
							}
						}
					}
				}
			}
		}
	`;

	const response = await client.query({
		query: getCommercialLendingContent,
	});

	const navbarContent = await getNavbarContent();
	const footerContent = await getFooterContent();
	const readBlogsContent = await getReadBlogsContent();

	return {
		props: {
			navbarContent,
			commercialLendingContent:
				response?.data?.mainContent?.edges[0]?.node?.CommercialLendingPage,
			readBlogsContent,
			footerContent,
		},
		revalidate: 1,
	};
}
