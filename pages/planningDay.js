import Head from "next/head";
import {gql} from "@apollo/client";
import {client} from "../lib/apollo";
import {getNavbarContent} from "../lib/navbarContent";
import {getReadBlogsContent} from "../lib/readBlogsContent";
import {getFooterContent} from "../lib/footerContent";

// Components
import Hero from "../components/Hero";
import Navbar from "../components/Navbar";
import Footer from "../components/Footer";
import ReadBlogs from "../components/ReadBlogs";
import Testimonial from "../components/Testimonial";
import TextPointImage from "../components/TextPointImage";
import TextImageAwards from "../components/TextImageAwards";
import TitleTwoParagraphButton from "../components/TitleTwoParagraphButton";

const planningDay = ({
	navbarContent,
	planningDayContent,
	readBlogsContent,
	footerContent,
}) => {
	return (
		<>
			<Head>
				<title>{navbarContent?.pageTitle}</title>
				<meta name="description" content="Generated by create next app" />
				<link rel="icon" href="/svg/favicon.svg" />
			</Head>

			{/* <!--===== NAVBAR =====--> */}
			<Navbar
				navbarContent={navbarContent?.navbarContent}
				menuLinks={navbarContent?.navbarMenu}
			/>

			<main>
				{/* HERO */}
				<Hero
					title={planningDayContent?.heroSection?.title}
					backgroundImage={
						planningDayContent?.heroSection?.heroImage?.sourceUrl
					}
				/>

				{/* TITLE AND PARAGRAPH */}
				<TitleTwoParagraphButton
					// Content
					title={planningDayContent?.titleTwoParagraphsButton?.title}
					boldParagraph={
						planningDayContent?.titleTwoParagraphsButton?.boldParagraph
					}
					paragraphOne={
						planningDayContent?.titleTwoParagraphsButton?.paragraphOne
					}
					paragraphTwo={
						planningDayContent?.titleTwoParagraphsButton?.paragraphTwo
					}
					buttonLink={planningDayContent?.titleTwoParagraphsButton?.buttonLink}
					// Display Options
					displayThreeSquaresOption={
						planningDayContent?.titleTwoParagraphsButton
							?.displayThreeSquaresOption
					}
					displayEmailLinkOption={
						planningDayContent?.titleTwoParagraphsButton?.displayEmailLinkOption
					}
					displayButtonOption={
						planningDayContent?.titleTwoParagraphsButton?.displayButtonOption
					}
					displayBoldText={
						planningDayContent?.titleTwoParagraphsButton?.displayBoldText
					}
				/>

				{/* TEXT IMAGE AWARDS */}
				<TextPointImage
					title={planningDayContent?.textBulletPointImage?.title}
					paragraph={planningDayContent?.textBulletPointImage?.paragraph}
					image={planningDayContent?.textBulletPointImage?.image?.sourceUrl}
					bulletPoint={planningDayContent?.textBulletPointImage?.bulletPoint}
				/>

				{/* TESTIMONIAL */}
				<Testimonial
					// Content
					title={planningDayContent?.testimonialSlider?.title}
					testimonialContent={
						planningDayContent?.testimonialSlider?.testimonialContent
					}
					// Display Options
					displayBackgroundAesthetics={
						planningDayContent?.testimonialSlider?.displayBackgroundAesthetics
					}
				/>

				{/* TEXT IMAGE AWARDS */}
				<TextImageAwards
					title={planningDayContent?.textImageAwards?.title}
					paragraph={planningDayContent?.textImageAwards?.paragraph}
					buttonLink={planningDayContent?.textImageAwards?.buttonLink}
					image={planningDayContent?.textImageAwards?.image?.sourceUrl}
					awardsOne={planningDayContent?.textImageAwards?.awardsOne?.sourceUrl}
					awardsTwo={planningDayContent?.textImageAwards?.awardsTwo?.sourceUrl}
				/>

				{/* READ BLOGS */}
				<ReadBlogs
					title={planningDayContent?.readOurBlogs?.title}
					readBlogsContent={readBlogsContent?.readBlogsContent}
				/>
			</main>

			{/* <!--===== FOOTER =====--> */}
			<Footer
				footerContent={footerContent?.footerContent}
				menuLinks={footerContent?.footerMenu}
			/>
		</>
	);
};

export default planningDay;

export async function getStaticProps() {
	const getPlanningDayContentContent = gql`
		{
			mainContent: pages(where: {id: 322}) {
				edges {
					node {
						planningDayPage {
							heroSection {
								title
								heroImage {
									sourceUrl
								}
							}
							readOurBlogs {
								title
							}
							titleTwoParagraphsButton {
								title
								paragraphOne
								paragraphTwo
								boldParagraph
								buttonLink {
									url
									title
									target
								}
								displayThreeSquaresOption
								displayEmailLinkOption
								displayButtonOption
								displayBoldText
							}
							textImageAwards {
								title
								paragraph
								image {
									sourceUrl
								}
								buttonLink {
									url
									title
									target
								}
								awardsTwo {
									sourceUrl
								}
								awardsOne {
									sourceUrl
								}
							}
							textBulletPointImage {
								title
								paragraph
								image {
									sourceUrl
								}
								bulletPoint {
									title
									paragraph
								}
							}
							testimonialSlider {
								title
								displayBackgroundAestheticsOption
								testimonialContent {
									personName
									paragraph
								}
							}
						}
					}
				}
			}
		}
	`;

	const response = await client.query({
		query: getPlanningDayContentContent,
	});

	const navbarContent = await getNavbarContent();
	const footerContent = await getFooterContent();
	const readBlogsContent = await getReadBlogsContent();

	return {
		props: {
			navbarContent,
			planningDayContent:
				response?.data?.mainContent?.edges[0]?.node?.planningDayPage,
			readBlogsContent,
			footerContent,
		},
		revalidate: 1,
	};
}
